{"version":3,"sources":["consts.js","actions/popups.js","actions/file_upload.js","reducers/popups.js","reducers/initialise.js","reducers/file_upload.js","reducers/root_reducer.js","store.js","components/drag_drop_target.js","components/upload.js","App.js","index.js"],"names":["ADMIN_URL","concat","ADMIN_API_URL","IMAGE_REGEX","DOCS_REGEX","VALID_UPLOAD","Object","freeze","Uploadable","Cancelled","Too Big","Wrong Filetype","VALID_UPLOAD_DISPLAY","OPEN_POPUP","CLOSE_POPUP","FREEHAND_POST_TYPE","TEXT_BOX_POST_TYPE","BIG_IMAGE_TYPE","MASTER_POPUP","FREEHAND_POPUP","TEXTBOX_POPUP","IMAGE_MASTER_POPUP","BIG_IMAGE_POPUP","IMAGE_SELECTOR_POPUP","IMAGE_DELETE_POPUP","LINK_SELECTOR_POPUP","SET_IMAGE_LIST_INDEX","ACTION_EDITING_POPUP","ADD_POPUP","DELETE_POPUP","DELETE_EDITOR_POPUP","POPUP_PRESET_FOR_TESTING","ADD_UPLOADABLE","REMOVE_UPLOADABLE","SET_UPLOAD_STATE","INIT_UPLOAD_PAGE","SELECT_DIRECTORY","UPLOAD_NONE","UPLOAD_COMPLETE","FILE_PROGRESS","uploadList","list","index","dir","filetype","dispatch","Promise","resolve","reject","recursiveLoop","item","enabled","f","FormData","append","JSON","stringify","fname","file_data","innerIndex","tim","window","setInterval","type","complete","clearInterval","uploadFile","then","val","length","setUploadState","uploadState","initialState","popup_stack","image_root","image_list","image_list_index","max_images","makePopupStack","popstack","current","_popstack","slice","POPUP_ACTIONS","pop","toConsumableArray","popupReducer","state","arguments","undefined","action","popup_action","popup","objectSpread","preset","FileUploadReducer","upload_state","upload_ar","directories","selected_directory","p","payload","size","findIndex","upload","max_size","exec","selected","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","combineReducers","file_upload","applyMiddleware","thunk","Target","className","this","props","isOver","connectDropTarget","react_default","a","createElement","Component","DropTarget","NativeTypes","FILE","drop","monitor","component","getItem","files","onDrop","connect","dropTarget","isOverCurrent","shallow","canDrop","AdminUpload","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectFile","bind","assertThisInitialized","doUpload","fileSelector","React","createRef","selectFiles","setSelected","initUploadPage","e","target","dataTransfer","i","createUploadableFile","file","_this2","reader","FileReader","onload","addUploadable","name","result","readAsDataURL","click","dropped","_this3","Array","isArray","map","selectDirectory","value","_this4","Fragment","onChange","key","onClick","disabled","UPLOAD_ACTIONS","drag_drop_target","style","display","ref","id","multiple","comp","src","alt","removeUploadable","ar","flist","img","DragDropContext","HTML5Backend","App","es","store","components_upload","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9e0c6fda.chunk.js","sourcesContent":["export const FREEHAND_POST_TYPE = 'FREEHAND_POST_TYPE';\nexport const NEWS_HEADLINE_POST_TYPE = 'NEWS_HEADLINE_POST_TYPE';\nexport const PORTRAIT_POST_TYPE = 'PORTRAIT_POST_TYPE';\nexport const TEXT_BOX_POST_TYPE = 'TEXT_BOX_POST_TYPE';\nexport const GALLERY_4_POST_TYPE = 'GALLERY_4_POST_TYPE';\nexport const MULTICOL_POST_TYPE = 'MULTICOL_2_POST_TYPE';\nexport const BIG_IMAGE_TYPE = 'BIG_IMAGE_TYPE';\n\nexport const ERROR_ALL_INPUTS = 'Please complete all fields';\nexport const ERROR_VALID_EMAIL = 'Please enter a valid email address';\n\nexport const _URL = 'http://localhost/bttc/public/';\nexport const API_URL = 'http://localhost/bttc/public/api/';\nexport const ADMIN_URL = `${_URL}admin/`;\nexport const ADMIN_API_URL = `${API_URL}admin/`;\nexport const ADMIN_URL_ELEM = `${ADMIN_URL}elem/`;\nexport const ADMIN_URL_GALLERY = `${ADMIN_URL}gallery/`;\nexport const ADMIN_URL_UTIL = `${ADMIN_URL}util/`;\nexport const ADMIN_URL_EDITORS = `${ADMIN_API_URL}users/`;\nexport const ADMIN_URL_TEMPLATES = `${ADMIN_URL}templates/`;\nexport const ADMIN_URL_MENU = `${ADMIN_API_URL}menu/`;\nexport const ADMIN_URL_PAGE = `${ADMIN_URL}page/`;\nexport const SITE_URL = 'http://01200.co.uk/bttc/public/';\n\n\nexport const LINK_TYPE_PAGE = 'LINK_TYPE_PAGE';\nexport const LINK_TYPE_DOC = 'LINK_TYPE_DOC';\nexport const LINK_TYPE_TEXT = 'LINK_TYPE_TEXT';\n\n\nexport const FETCH_HEADERS = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n};\n\nexport const FETCH_HEADERS_AUTH = () => ({ ...FETCH_HEADERS, authorization: `Bearer ${localStorage.getItem('token')}` });\n\nexport const IMAGE_REGEX = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\nexport const DOCS_REGEX = /(\\.pdf|\\.xls|\\.doc)$/i;\nexport const VALID_UPLOAD = Object.freeze({\n  Uploadable: 0, Cancelled: 1, 'Too Big': 2, 'Wrong Filetype': 3,\n});\nexport const VALID_UPLOAD_DISPLAY = ['Ready', 'Cancelled', 'Too Big', 'Wrong Filetype'];\n","import { ADMIN_URL_GALLERY } from '../consts';\n\nexport const OPEN_POPUP = 'OPEN_POPUP';\nexport const CLOSE_POPUP = 'CLOSE_POPUP';\nexport const FREEHAND_POST_TYPE = 'FREEHAND_POST_TYPE';\nexport const TEXT_BOX_POST_TYPE = 'TEXT_BOX_POST_TYPE';\nexport const BIG_IMAGE_TYPE = 'BIG_IMAGE_TYPE';\nexport const GALLERY_IMAGE_TYPE = 'GALLERY_IMAGE_TYPE';\nexport const TEXTBOX_IMAGE_TYPE = 'TEXTBOX_IMAGE_TYPE';\nexport const MASTER_POPUP = 'MASTER_POPUP';\nexport const FREEHAND_POPUP = 'FREEHAND_POPUP';\nexport const TEXTBOX_POPUP = 'TEXTBOX_POPUP';\nexport const IMAGE_MASTER_POPUP = 'IMAGE_MASTER_POPUP';\nexport const BIG_IMAGE_POPUP = 'BIG_IMAGE_POPUP';\nexport const GET_IMAGE_LIST = 'GET_IMAGE_LIST';\nexport const IMAGE_SELECTOR_POPUP = 'IMAGE_SELECTOR_POPUP';\nexport const IMAGE_DELETE_POPUP = 'IMAGE_DELETE_POPUP';\nexport const LINK_SELECTOR_POPUP = 'LINK_SELECTOR_POPUP';\nexport const SET_IMAGE_LIST_INDEX = 'SET_IMAGE_LIST_INDEX';\nexport const SELECT_IMAGE = 'SELECT_IMAGE';\n\n\nexport const ACTION_EDITING_POPUP = 'EDITING_POPUP';\nexport const ADD_POPUP = 'ADD_POPUP';\nexport const DELETE_POPUP = 'DELETE_POPUP';\nexport const DELETE_EDITOR_POPUP = 'DELETE_EDITOR_POPUP';\n\nexport const POPUP_PRESET_FOR_TESTING = 'POPUP_PRESET_FOR_TESTING';\n\nexport const showMasterPopup = () => ({\n  type: OPEN_POPUP,\n  popup: MASTER_POPUP,\n  popup_action: ACTION_EDITING_POPUP,\n});\n\nexport const showImagesListPopup = list => ({\n  type: OPEN_POPUP,\n  image_root: list.root,\n  image_list: list.list,\n  popup: IMAGE_SELECTOR_POPUP,\n  popup_action: ACTION_EDITING_POPUP,\n});\n\nexport const openPopup = (popup_action, popup) => {\n  if ((popup !== BIG_IMAGE_TYPE) && (popup !== GALLERY_IMAGE_TYPE) && (popup !== TEXTBOX_IMAGE_TYPE)) {\n    return {\n      type: OPEN_POPUP,\n      popup_action,\n      popup,\n    };\n  }\n  return dispatch => fetch(ADMIN_URL_GALLERY + popup,\n    {\n      method: 'GET',\n    })\n    .then(res => res.json())\n    .then(res => dispatch(showImagesListPopup(res)));\n};\n\nexport const closePopup = () => ({\n  type: CLOSE_POPUP,\n});\n\nexport const setImageListIndex = index => ({\n  type: SET_IMAGE_LIST_INDEX,\n  index,\n});\n\nexport function PresetForTesting(preset) {\n  return {\n    type: POPUP_PRESET_FOR_TESTING,\n    preset,\n  };\n}\n","/* eslint-disable no-tabs */\n/* eslint-disable no-plusplus */\nimport { VALID_UPLOAD } from '../consts';\n\nexport const ADD_UPLOADABLE = 'ADD_UPLOADABLE';\nexport const REMOVE_UPLOADABLE = 'REMOVE_UPLOADABLE';\nexport const DO_UPLOAD = 'DO_UPLOAD';\nexport const SET_UPLOAD_STATE = 'SET_UPLOAD_STATE';\nexport const INIT_UPLOAD_PAGE = 'INIT_UPLOAD_PAGE';\nexport const SELECT_DIRECTORY = 'SELECT_DIRECTORY';\n\nexport const UPLOAD_IN_PROGRESS = 'UPLOAD IN PROGRESS';\nexport const UPLOAD_NONE = 'READY';\nexport const UPLOAD_COMPLETE = 'UPLOAD COMPLETE';\nexport const UPLOAD_FAILED = 'FAILED';\nexport const FILE_PROGRESS = 'FILE_PROGRESS';\n\nconst _URL = 'http://localhost/bttc/public/';\n\n\nconst uploadList = (list, index, dir, filetype, dispatch) => new Promise((resolve, reject) => {\n  function uploadFile(list, index, dir, filetype, dispatch) {\n    return new Promise((resolve) => {\n      const item = list[index];\n      if (item.enabled !== VALID_UPLOAD.Uploadable) {\n        return resolve(++index);\n      }\n      const f = new FormData();\n      f.append('items[]', JSON.stringify({ fname: item.fname, file_data: item.file_data }));\n      f.append('dir', dir);\n      f.append('filetype', filetype);\n\n      let innerIndex = 0;\n      const tim = window.setInterval(() => {\n        if (innerIndex <= 10) {\n          if (innerIndex === 10) {\n            dispatch({ type: FILE_PROGRESS, complete: 100, fname: item.fname });\n            index++;\n            clearInterval(tim);\n            return resolve(index);\n          }\n\n          innerIndex++;\n          dispatch({ type: FILE_PROGRESS, complete: innerIndex * 10, fname: item.fname });\n        }\n      }, 50);\n    });\n  }\n  function recursiveLoop(list, index, dir, filetype, dispatch) {\n    uploadFile(list, index, dir, filetype, dispatch)\n      .then((val) => {\n        index = val;\n        if (index < list.length) recursiveLoop(list, index, dir, filetype, dispatch);\n        else resolve('all done');\n      });\n  }\n  return recursiveLoop(list, index, dir, filetype, dispatch);\n});\n\n\nconst realUploadList = (list, index, dir, filetype, dispatch) => new Promise((resolve, reject) => {\n  function uploadFile(list, index, dir, filetype, dispatch) {\n    return new Promise((resolve) => {\n      const item = list[index];\n      if (item.enabled !== VALID_UPLOAD.Uploadable) return resolve(++index);\n      const f = new FormData();\n      f.append('items[]', JSON.stringify({ fname: item.fname, file_data: item.file_data }));\n      f.append('dir', dir);\n      f.append('filetype', filetype);\n      const xhr = new XMLHttpRequest();\n\n      xhr.addEventListener('progress', (e) => {\n        if (e.lengthComputable) {\n          const percentComplete = e.loaded / e.total * 100;\n          dispatch({ type: FILE_PROGRESS, complete: e.loaded / e.total, fname: item.fname });\n        }\n      });\n\n      xhr.addEventListener('load', (e) => {\n        const obj = JSON.parse(e.currentTarget.response);\n        if (!obj.hasOwnProperty('error')) dispatch({ type: FILE_PROGRESS, complete: 100, fname: item.fname });\n        else dispatch({ type: FILE_PROGRESS, complete: obj.error, fname: item.fname });\n        index++;\n        return resolve(index);\n      });\n      xhr.addEventListener('error', (e) => {\n        console.dir(e);\n      });\n      xhr.open('POST', `${_URL}do_upload`);\n      xhr.send(f);\n    });\n  }\n  function recursiveLoop(list, index, dir, filetype, dispatch) {\n    uploadFile(list, index, dir, filetype, dispatch)\n      .then((val) => {\n        index = val;\n        if (index < list.length) recursiveLoop(list, index, dir, filetype, dispatch);\n        else resolve('all done');\n      });\n  }\n  return recursiveLoop(list, index, dir, filetype, dispatch);\n});\n\n\nexport const doUpload = (flist, dir, filetype) => (dispatch) => {\n  dispatch(setUploadState(UPLOAD_IN_PROGRESS));\n  uploadList(flist, 0, dir, filetype, dispatch)\n    .then(() => dispatch(setUploadState(UPLOAD_COMPLETE)));\n};\n\nexport const setUploadState = uploadState => ({\n  type: SET_UPLOAD_STATE,\n  uploadState,\n});\n\nexport const addToUpload = item => ({\n  type: ADD_UPLOADABLE,\n  payload: item,\n});\n\nexport const removeUploadable = index => ({\n  type: REMOVE_UPLOADABLE,\n  index,\n});\n\n/* emulate response from server - returns directory names where images are stored */\nexport function InitUploadPage(filetype) {\n  return {\n    type: INIT_UPLOAD_PAGE,\n    directories: ['slideshow', 'recipes', 'ingredients'],\n  };\n\n  /*\n    return dispatch=>{\n        return fetch(ADMIN_URL+'image_directories/'+filetype, {method:'GET'})\n        .then(res=>res.json())\n        .then(res=>{\n            dispatch({\n                type: INIT_UPLOAD_PAGE,\n                directories : res.directories\n           });\n        });\n\t}\n\t*/\n}\n\nexport const SelectDirectory = selected => ({\n  type: SELECT_DIRECTORY,\n  selected,\n});\n","import * as POPUP_ACTIONS from '../actions/popups';\nimport { initPopup } from './initialise';\n\nconst initialState = initPopup();\n\nfunction makePopupStack(popstack, current) {\n  const _popstack = popstack.slice();\n  if ((_popstack.length) && ((_popstack[_popstack.length - 1] === POPUP_ACTIONS.MASTER_POPUP) || (_popstack[_popstack.length - 1] === POPUP_ACTIONS.IMAGE_MASTER_POPUP))) _popstack.pop();\n  return [..._popstack, current];\n}\n\n\nexport default function popupReducer(state = initialState, action) {\n  switch (action.type) {\n    case POPUP_ACTIONS.OPEN_POPUP:\n      switch (action.popup_action) {\n        case POPUP_ACTIONS.ACTION_EDITING_POPUP:\n          switch (action.popup) {\n            case POPUP_ACTIONS.MASTER_POPUP:\n            case POPUP_ACTIONS.IMAGE_MASTER_POPUP:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, action.popup) };\n            case POPUP_ACTIONS.FREEHAND_POST_TYPE:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, POPUP_ACTIONS.FREEHAND_POPUP) };\n            case POPUP_ACTIONS.TEXT_BOX_POST_TYPE:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, POPUP_ACTIONS.TEXTBOX_POPUP) };\n            case POPUP_ACTIONS.BIG_IMAGE_TYPE:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, POPUP_ACTIONS.BIG_IMAGE_POPUP) };\n            case POPUP_ACTIONS.LINK_SELECTOR_POPUP:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, POPUP_ACTIONS.LINK_SELECTOR_POPUP) };\n            case POPUP_ACTIONS.IMAGE_SELECTOR_POPUP:\n              return {\n                ...state,\n                image_list: action.image_list,\n                image_root: action.image_root,\n                image_list_index: 0,\n                popup_stack: makePopupStack(state.popup_stack, POPUP_ACTIONS.IMAGE_SELECTOR_POPUP),\n              };\n            case POPUP_ACTIONS.DELETE_POPUP:\n            case POPUP_ACTIONS.DELETE_EDITOR_POPUP:\n            case POPUP_ACTIONS.ADD_POPUP:\n            case POPUP_ACTIONS.IMAGE_DELETE_POPUP:\n              return { ...state, popup_stack: makePopupStack(state.popup_stack, action.popup) };\n            default:\n              return state;\n          }\n        default:\n          return state;\n      }\n    case POPUP_ACTIONS.SET_IMAGE_LIST_INDEX:\n      return { ...state, image_list_index: action.index };\n    case POPUP_ACTIONS.CLOSE_POPUP:\n      return { ...state, popup_stack: state.popup_stack.slice(0, state.popup_stack.length - 1) };\n    case POPUP_ACTIONS.POPUP_PRESET_FOR_TESTING:\n      return action.preset;\n    default:\n      return state;\n  }\n}\n","import { UPLOAD_NONE } from '../actions/file_upload';\n\nexport function initPopup() {\n  return {\n    popup_stack: [], image_root: '', image_list: [], image_list_index: -1, max_images: 12,\n  };\n}\nexport function initFileUpload() {\n  return {\n    upload_state: UPLOAD_NONE, upload_ar: [], directories: [], selected_directory: '',\n  };\n}\n","import {\n  ADD_UPLOADABLE, SET_UPLOAD_STATE, FILE_PROGRESS, REMOVE_UPLOADABLE,\n  UPLOAD_NONE, UPLOAD_COMPLETE, INIT_UPLOAD_PAGE, SELECT_DIRECTORY,\n} from '../actions/file_upload';\nimport { initFileUpload } from './initialise';\nimport { IMAGE_REGEX, DOCS_REGEX, VALID_UPLOAD } from '../consts';\n\n\nexport default function FileUploadReducer(state = initFileUpload(), action) {\n  switch (action.type) {\n    case ADD_UPLOADABLE:\n    {\n      const p = { ...action.payload };\n      delete p.size;\n      const found = state.upload_ar.findIndex(item => item.fname === p.fname);\n      if (found >= 0) {\n        return state;\n      }\n      let upload = VALID_UPLOAD.Uploadable;\n      if (action.payload.size > state.max_size) upload = VALID_UPLOAD['Too Big'];\n      else {\n        let regex;\n        if (action.payload.filetype === 'image') regex = IMAGE_REGEX;\n        else regex = DOCS_REGEX;\n\n        if (regex.exec(action.payload.fname) === null) upload = VALID_UPLOAD['Wrong Filetype'];\n      }\n      return state.upload_state === UPLOAD_COMPLETE\n        ? { ...state, upload_ar: [{ ...p, enabled: upload, complete: UPLOAD_NONE }], upload_state: UPLOAD_NONE }\n        : { ...state, upload_ar: [...state.upload_ar, { ...p, enabled: upload, complete: UPLOAD_NONE }] };\n    }\n    case REMOVE_UPLOADABLE:\n      return { ...state, upload_ar: state.upload_ar.slice(0, action.index).concat(state.upload_ar.slice(action.index + 1)) };\n    case SET_UPLOAD_STATE:\n      return { ...state, upload_state: action.uploadState };\n    case FILE_PROGRESS:\n      const index = state.upload_ar.findIndex(item => (item.fname === action.fname));\n      return { ...state, upload_ar: state.upload_ar.slice(0, index).concat({ ...state.upload_ar[index], complete: action.complete }).concat(state.upload_ar.slice(index + 1)) };\n    case INIT_UPLOAD_PAGE:\n      return {\n        ...state, directories: action.directories, selected_directory: action.directories[0], max_size: action.max_size, upload_ar: [],\n      };\n    case SELECT_DIRECTORY:\n      return { ...state, selected_directory: action.selected };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport popupReducer from './popups';\nimport FileUploadReducer from './file_upload';\n\nexport default () => combineReducers({\n  popup: popupReducer,\n  file_upload: FileUploadReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers/root_reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const StoreMaker = () => createStore(\n  createRootReducer(),\n  {},\n  composeEnhancers(\n    applyMiddleware(\n      thunk,\n    ),\n  ),\n);\n\n\nexport const Store = StoreMaker();\n","import React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport {NativeTypes} from 'react-dnd-html5-backend';\n\nclass Target extends Component{\n    render(){\n   //    const { isOver, connectDropTarget, droppedItem } = this.props;\n       let className = this.props.isOver ? 'drag_drop_over':'drag_drop_normal';\n        return this.props.connectDropTarget(\n            <div className={`target ${className}`}>\n            OR DRAG FILES HERE\n            </div>\n        )\n    }\n}\n\nconst fileTarget = {\n    drop(props, monitor, component){\n        const item = monitor.getItem().files\n        props.onDrop(item)\n    }\n}\nfunction collect(connect, monitor) {\n  return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop()\n  };\n}\n\nexport default DropTarget(NativeTypes.FILE, fileTarget, collect)(Target);","import React from 'react';\nimport * as UPLOAD_ACTIONS from '../actions/file_upload';\nimport {connect} from 'react-redux';\nimport {VALID_UPLOAD, VALID_UPLOAD_DISPLAY} from '../consts';\nimport DropTarget from './drag_drop_target';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nclass AdminUpload extends React.Component\n{\n    constructor()\n    {\n        super();\n        this.selectFile = this.selectFile.bind(this);\n        this.doUpload = this.doUpload.bind(this);\n        this.fileSelector=React.createRef();\n        this.selectFiles=this.selectFiles.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n    }\n\n    componentDidMount()\n    {\n        this.props.initUploadPage(this.props.filetype);\n    }\n\n\n    doUpload()\n    {\n\t\tif(this.props.upload.upload_ar.length === 0 )\n\t\t\treturn;\n        this.props.doUpload(this.props.upload.upload_ar, this.props.upload.selected_directory, this.props.filetype);\n    }\n\n    selectFile(e)\n    {\n        let files = e.target.files || e.dataTransfer.files;\n        if(!files.length)\n            return;\n        this.files = files;\n        for(let i=0; i<files.length; i++)\n        {        \n            this.createUploadableFile(files[i]);\n        }\n    }\n\n    createUploadableFile(file){\n        let reader = new FileReader();\n        reader.onload = (e)=>{\n            this.props.addUploadable({fname: file.name, file_data: e.target.result, size:file.size, filetype:this.props.filetype});\n        }\n        reader.readAsDataURL(file);\n    }\n\n    selectFiles()\n    {\n        this.fileSelector.current.click();\n    }\n\n    onDrop(dropped){\n         Array.isArray(dropped)?dropped.map((item)=>this.createUploadableFile(item)):this.createUploadableFile(dropped);\n      }\n\n    setSelected(e)\n    {\n        this.props.selectDirectory(e.target.value);\n    }\n\n    render() \n    {\n        const hidden={display:'none'};\n        return (            \n        <React.Fragment>\n            <div className=\"row\">\n                <div className=\"small-2 columns\">\n                    <div className='upload-status target'>{this.props.upload.upload_state}</div>\n\t\t\t\t\t<div>Upload To</div>\n\t\t\t\t\t{this.props.filetype==='image'?\n                    <select value={this.props.upload.selected_directory} onChange={this.setSelected}>{this.props.upload.directories.map((item)=><option key={item} value={item}>{item}</option>)}</select>\n                    :null}\n                    <button className='button' onClick={this.doUpload} disabled={this.props.upload.upload_state===UPLOAD_ACTIONS.UPLOAD_COMPLETE}>Upload</button>\n                    <button className='button' onClick={this.selectFiles}>select</button>\n                    <DropTarget onDrop = {this.onDrop} />\n                    <div style={hidden}><input ref={this.fileSelector} type='file' id='single' onChange={this.selectFile} multiple /></div>\n                    <div className='drag_drop_panel'></div>\n                </div>\n                <div className=\"small-10 columns\">\n                    <div className='row gallery-container small-up-2 medium-up-4 large-up-4'>\n                        {this.props.upload.upload_ar.map((item, index)=>{\n\t\t\t\t\t\t\tconst comp = item.complete < 100 ? item.complete + '%' : 'FINISHED';\n                            return(\n                        <div key={index+item.fname} className='column column-block gallery'>\n\t\t\t\t\t\t<div className = ' uploadable-thumb-wrap'>\n                            {\n\t\t\t\t\t\t\t\t(this.props.filetype==='image' & item.enabled === VALID_UPLOAD.Uploadable) ? \n\t                                <img className='uploadable-thumb'  src={item.file_data} alt={'uplodable'+item.file_data}/>:<div className='bad_upload_name'>\n                                    {item.fname}</div>\n                            }\n                        <p>{(item.complete !== UPLOAD_ACTIONS.UPLOAD_NONE) ? comp : VALID_UPLOAD_DISPLAY[item.enabled]}</p>\n                        <p><button id={'remove_'+index} className='button' onClick={this.props.removeUploadable.bind(this, index)} disabled={this.props.upload.upload_state !== UPLOAD_ACTIONS.UPLOAD_NONE}>Delete</button></p>\n\t\t\t\t\t</div>\n        </div>)})}\n                </div>\n            </div>\n        </div>\n    </React.Fragment>\n    )\n    }   \n} \n\nconst mapStateToProps = state => {\n        return {\n            upload: state.file_upload\n        };\n      };\n      \n    \nconst mapDispatchToProps = dispatch=>{\n        return {\n            doUpload: (ar, dir, filetype)=>dispatch(UPLOAD_ACTIONS.doUpload(ar, dir, filetype)),\n            addUploadable: (img)=>dispatch(UPLOAD_ACTIONS.addToUpload(img)),\n            removeUploadable: (index)=>dispatch(UPLOAD_ACTIONS.removeUploadable(index)),\n            initUploadPage: (filetype)=>dispatch(UPLOAD_ACTIONS.InitUploadPage(filetype)),\n            selectDirectory: (val)=>dispatch(UPLOAD_ACTIONS.SelectDirectory(val))\n        }\n      }\n      \nexport default connect(mapStateToProps, mapDispatchToProps)( DragDropContext(HTML5Backend)(AdminUpload));\n      \n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { Store } from './store';\n\nimport AdminUpload from './components/upload';\n\nclass App extends Component {\n\trender(){\n\t\treturn( \n\t\t\t<Provider store={Store}>\n\t\t\t<AdminUpload filetype='image' />\n\t\t\t</Provider>\n\t\t);\n  \t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}